<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProfessorMapper">
    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap type="kr.parkjaehan.models.Professor" id="professor">
        <result property="profno" column="profno" />
        <result property="name" column="name" />
        <result property="userid" column="userid" />
        <result property="position" column="position" />
        <result property="sal" column="sal" />
        <result property="hiredate" column="hiredate" />
        <result property="comm" column="comm" />
        <result property="deptno" column="deptno" />
    </resultMap>

    <!-- 데이터 저장을 위한 기능 정의 -->
    <insert id="insert" 
        parameterType="kr.parkjaehan.models.Professor" 
        useGeneratedKeys="true" 
        keyProperty="profno"> 
        INSERT INTO professor (name, userid, position, sal, hiredate, comm, deptno) VALUES (#{name}, #{userid}, #{position}, #{sal}, #{hiredate}, #{comm}, #{deptno});
    </insert>

    <!-- 데이터 삭제를 위한 기능 정의 -->
    <delete id="delete" 
        parameterType="kr.parkjaehan.models.Professor"> 
        DELETE FROM professor WHERE profno = #{profno};
    </delete>

    <!-- 데이터 갱신을 위한 기능 정의 -->
    <update id="update" 
        parameterType="kr.parkjaehan.models.Professor"> 
        UPDATE professor SET name = #{name}, userid = #{userid}, position = #{position}, sal = #{sal}, hiredate = #{hiredate}, comm = #{comm}, deptno = #{deptno} WHERE profno = #{profno};
    </update>

    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem" 
        parameterType="kr.parkjaehan.models.Professor" 
        resultMap="professor"> 
        SELECT profno, name, userid, position, sal, hiredate, comm, deptno FROM professor WHERE profno = #{profno};
    </select>

    <!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectList" 
        resultMap="professor">
       SELECT profno, name, userid, position, sal, hiredate, comm, deptno FROM professor;
    </select>

    <!--특정 학과에 소속된 모든 학생의 삭제를 위한 기능 정의-->
    <delete id = "deleteByDeptno" parameterType="kr.parkjaehan.models.Professor">
        DELETE FROM professor WHERE deptno = #{deptno};
    </delete>

    <!--특정 교수번호에 해당하는 교수의 삭제를 위한 기능 정의-->
    <delete id = "deleteByProfno" parameterType="kr.parkjaehan.models.Professor">
        DELETE FROM professor WHERE profno = #{profno};
    </delete>
</mapper>